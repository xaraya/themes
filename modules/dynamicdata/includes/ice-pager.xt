<xar:comment>
    This template implements a pager snippet. Provide the following variables
    in the scope where you use this template and it should display the right
    pager stuff automatically. Setting those variables in the parent template
    or providing them in the subdata attribute of the xar:template tag brings
    those variables automatically into scope.
    
    REQUIRED:
    $count        - the total number of items in the set ( REQUIRED )
    $baseurl      - the baseurl to work from
    
    OPTIONAL:
    $startnum     - at which item number do we start (default: from URL, otherwise 1)
    $itemsperpage - how many items should we show per pager page (default 10)
    $maxpages     - how big is the sliding window of pages (default 9 ) its best to use an odd number for this.
    $objectlabel  - what's the plural form of the items we're showing (default 'items')
    $baseurl      - what is the base url for paging (default: from request info )
</xar:comment>
<div class="ice-pager">
    <!-- Determine the variables we need -->
    <xar:if condition="!isset($startnum)">
        <xar:if condition="xarVarFetch('startnum', 'int', $startnum,  1, XARVAR_NOT_REQUIRED)"></xar:if>
    </xar:if>
    <xar:if condition="!isset($itemsperpage)">
        <xar:set name="itemsperpage">10</xar:set>
    </xar:if>
    <xar:if condition="!isset($maxpages)">
        <xar:set name="maxpages">9</xar:set>
    </xar:if>
    <xar:if condition="!isset($objectlabel)">
        <xar:set name="objectlabel"><xar:mlstring>items</xar:mlstring></xar:set>
    </xar:if>
    <xar:if condition="!xarVarFetch('startnum', 'int', $startnum,  1, XARVAR_NOT_REQUIRED)"></xar:if>
    <xar:set name="nrofpages">(int) ceil( $count / $itemsperpage )</xar:set>
    <xar:set name="currentpage">floor($startnum/$itemsperpage)+1</xar:set>
    
    <div>
        <div id="ice-pager-statusline">
            <xar:ml>
                <xar:mlstring>Displaying #(1) to #(2) (of #(3) #(4) ) on page #(5) of #(6)</xar:mlstring>
                <xar:mlvar>#$startnum#</xar:mlvar>
                <xar:mlvar>#$startnum + $itemsperpage - 1#</xar:mlvar>
                <xar:mlvar>#$count#</xar:mlvar>
                <xar:mlvar>#$objectlabel#</xar:mlvar>
                <xar:mlvar>#$currentpage#</xar:mlvar>
                <xar:mlvar>#$nrofpages#</xar:mlvar>
            </xar:ml>
        </div>

        
        <!-- Determine how many pages are in the current set and which page we should be on -->
        <xar:if condition="$nrofpages lt $maxpages">
            <xar:set name="startpage">1</xar:set>
            <xar:set name="endpage">$nrofpages</xar:set>
        <xar:else/>
            <xar:set name="startpage">max(1, $currentpage-(floor($maxpages/2)))</xar:set>
            <xar:set name="endpage">min($nrofpages,$startpage+($maxpages-1))</xar:set>
        </xar:if>

        <xar:if condition="$currentpage gt 1">
            <a href="#$prevurl#" onclick="return loadContent(this.href, 'ice-objectview');">&lt;<xar:mlstring> Previous</xar:mlstring></a>&nbsp;&nbsp;
        </xar:if>
        <xar:if condition="$startpage gt 1">&hellip;&nbsp;</xar:if>
        <xar:for start="$page = $startpage" test="$page le $endpage" iter="$page++">
            <xar:set name="pagestart">($page-1)*($itemsperpage)+1</xar:set>
            <xar:if condition="$page != $currentpage">
                <a href="#$baseurl#&amp;startnum=#$pagestart#" onclick="return loadContent(this.href, 'ice-objectview');">#$page#</a>&nbsp;
            <xar:else/>
                #$page#&nbsp;
            </xar:if>
        </xar:for>
        <xar:if condition="$endpage lt $nrofpages">&hellip;</xar:if>
        <xar:if condition="$currentpage lt $endpage">&nbsp;&nbsp;
            <a href="#$nexturl#" onclick="return loadContent(this.href, 'ice-objectview');">
                <xar:mlstring>Next </xar:mlstring>&gt;
            </a>
        </xar:if>
    </div>
</div>